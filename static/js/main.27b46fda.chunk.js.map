{"version":3,"sources":["components/Header.js","containers/TodoApp.js","index.js"],"names":["text","className","TodoApp","props","setTotal","total_active","total","setState","state","todoTotal","Total","getTodoTotal","getTotal","setShowMode","showMode","setCompleteTotal","completeTotal","getCompleteTotal","setClear","clear","getClear","id","Header","this","Component","Footer","show","completedButtonShow","style","onClick","React","Todo","status","checkStyle","checkLabelStyle","Section","clearCompleted","list","i","length","push","updateTotal","updateCompleteTotal","total_complete","addTodo","id_count","updateTodo","todo","list2","delTodo","idx","splice","getList","setInterval","List","itemOnclick","new_status","new_checkStyle","new_checkLabelStyle","oldtodo","background","newtodo","render_rows","full_list","map","e","src","Input","handleChange","event","value","target","keyPress","keyCode","trim","type","onChange","onKeyDown","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27b46fda.chunk.js","sourcesContent":["import React from \"react\";\nexport default ({ text }) => (\n    <header className=\"todo-app__header\">\n        <h1 className=\"todo-app__title\">{text}</h1>\n    </header>\n)\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\n\n// Todo App\nclass TodoApp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {todoTotal:0, Total:0, completeTotal:0, showMode:\"all\", clear:0};\n    }\n\n    setTotal = (total_active, total)=>{\n        this.setState((state)=>({todoTotal: total_active, Total: total}));\n    }\n\n    getTodoTotal = ()=>{\n        return this.state.todoTotal;\n    }\n\n    getTotal = ()=>{\n        return this.state.Total;\n    }\n\n    setShowMode = (showMode)=>{\n        this.setState((state)=>({showMode:showMode}));\n    }\n\n    setCompleteTotal = (completeTotal)=>{\n        this.setState((state)=>({completeTotal:completeTotal}));\n    }\n\n    getCompleteTotal = ()=>{\n        return this.state.completeTotal;\n    }\n\n    setClear = (clear)=>{\n        this.setState((state)=>({clear: clear}));\n    }\n\n    getClear = ()=>{\n        return this.state.clear;\n    }\n\n    render() {\n        return (\n            <div className=\"todo-app__root\" id=\"root\">\n                <Header text=\"todos\" />\n                <Section setTotal={this.setTotal} \n                         setCompleteTotal={this.setCompleteTotal} \n                         showMode={this.state.showMode} \n                         setClear={this.setClear} \n                         getClear={this.getClear} />\n                <Footer getTodoTotal={this.getTodoTotal} \n                        getTotal={this.getTotal} \n                        getCompleteTotal={this.getCompleteTotal}\n                        setShowMode={this.setShowMode}\n                        setClear={this.setClear} />\n            </div>\n        );\n    }\n}\n\n// Footer\nclass Footer extends React.Component {\n    show = ()=>{\n        if (this.props.getTotal() === 0) \n            return {'display': 'none'};\n        return {};\n    }\n\n    completedButtonShow = ()=>{\n        if (this.props.getCompleteTotal() > 0)\n            return {};\n        return {'display': 'none'};\n    }\n\n    render() {\n        return (\n            <footer className=\"todo-app__footer\" id=\"todo-footer\" style={this.show()}>\n                <div className=\"todo-app__total\">{this.props.getTodoTotal()} left</div>\n                <ul className=\"todo-app__view-buttons\">\n                    <button onClick={()=>{this.props.setShowMode(\"all\")}}>All</button>\n                    <button onClick={()=>{this.props.setShowMode(\"active\")}}>Active</button>\n                    <button onClick={()=>{this.props.setShowMode(\"completed\")}}>Completed</button>\n                </ul>\n                <div className=\"todo-app__clean\">\n                    <button style={this.completedButtonShow()} onClick={()=>{this.props.setClear(1)}} >Clear Completed</button>\n                </div>\n            </footer>\n        );\n    }\n}\n\n// Todo Datastructure\nclass Todo {\n    constructor(id, text, status=0, checkStyle={}, checkLabelStyle={}) {\n        this.id = id;\n        this.text = text;\n        this.status = status;\n        this.checkStyle = checkStyle; //{text_decoration: \"line-through\", opacity: 0.5};\n        this.checkLabelStyle = checkLabelStyle;\n    }\n}\n\n// Section \nclass Section extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {id_count:0, list:[]};\n    }\n\n    clearCompleted = ()=>{\n        if (this.props.getClear() === 1) {\n            var list = [];\n            for (var i=0; i<this.state.list.length; i++)\n                if ( this.state.list[i].status === 0 )\n                    list.push(this.state.list[i]);\n            this.setState((state)=>({list: list}));\n            this.props.setClear(0);\n        }\n    }\n\n    updateTotal = ()=> {\n        var total = 0, total_active = 0;\n        for (var i=0; i<this.state.list.length; i++) {\n            if ( this.state.list[i].status === 0 )\n                total_active ++;\n            total ++;\n        }\n        this.props.setTotal(total_active, total);\n    }\n\n    updateCompleteTotal = ()=> {\n        var total_complete = 0;\n        for (var i=0; i<this.state.list.length; i++) {\n            if ( this.state.list[i].status === 1 )\n                total_complete ++;\n        }\n        this.props.setCompleteTotal(total_complete);\n    }\n\n    componentDidMount(){\n        setInterval(this.clearCompleted, 500);\n        setInterval(this.updateTotal, 500);\n        setInterval(this.updateCompleteTotal, 500);\n    }\n\n    addTodo = (text)=> {\n        this.setState((state)=>({\n            id_count: state.id_count+1,\n            list: [new Todo(this.state.id_count, text), ...state.list]\n        }));\n        // console.log(this.state);\n    }\n\n    updateTodo = (id, todo)=> {\n        let list2 = [...this.state.list];\n        for (var i=0; i<list2.length; i++) {\n            if (list2[i].id === id) {\n                list2[i] = todo;\n                break;\n            }\n        }\n        // console.log(list2);\n        this.setState((state)=>({list: list2}));\n    }\n\n    delTodo = (id)=> {\n        let list2 = [...this.state.list];\n        for (var i=0; i<list2.length; i++)\n            if (list2[i].id === id) {\n                var idx = i;\n                break;\n            }\n        list2.splice(idx,1);\n        this.setState((state)=>({list: list2}));\n    }\n\n    getList = ()=> {\n        return this.state.list;\n    }\n\n    render() {\n        return (\n            <section className=\"todo-app__main\">\n                <Input addTodo={this.addTodo} />\n                <List getList={this.getList} \n                      updateTodo={this.updateTodo} \n                      delTodo={this.delTodo} \n                      showMode={this.props.showMode}\n                />\n            </section>\n        );\n    }\n}\n\nclass List extends React.Component {\n\n    itemOnclick = (id)=> {\n        // console.log(id);\n        let list = this.props.getList();\n        for (var i=0; i<list.length; i++) {\n            if (list[i].id === id) {\n                var oldtodo = list[i];\n                break;\n            }\n        }\n        var text, new_status, new_checkStyle, new_checkLabelStyle;\n        if (oldtodo.status === 0){\n            text = oldtodo.text;\n            new_status = 1;\n            new_checkStyle = {\"text-decoration\": \"line-through\", \"opacity\": 0.5};\n            new_checkLabelStyle = {background: \"green\"};\n        } else {\n            text = oldtodo.text;\n            new_status = 0;\n            new_checkStyle = {};\n            new_checkLabelStyle = {};\n        }\n        var newtodo = new Todo(id, text, new_status, new_checkStyle, new_checkLabelStyle);\n        this.props.updateTodo(id, newtodo);\n    }\n\n    render_rows = ()=> {        \n        var list = [];\n        var full_list = [...this.props.getList()];\n        for (var i=0; i<full_list.length; i++) {\n            if (this.props.showMode === 'all') {\n                list.push(full_list[i]);\n            } else if (this.props.showMode === 'active' && full_list[i].status === 0) {\n                list.push(full_list[i]);\n            } else if (this.props.showMode === 'completed' && full_list[i].status === 1) {\n                list.push(full_list[i]);\n            }\n        }\n\n        return list.map(e => \n                <li key={e.id} className=\"todo-app__item\" style={e.checkStyle}>\n                    <div className=\"todo-app__checkbox\" onClick={()=>{this.itemOnclick(e.id)}}>\n                        <label id={e.id} style={e.checkLabelStyle} />\n                    </div>\n                    <h1 className=\"todo-app__item-detail\">{e.text}</h1>\n                    <img src=\"./img/x.png\" className=\"todo-app__item-x\" onClick={()=>{this.props.delTodo(e.id);}}/>\n                </li>\n            );\n    }\n\n    render() {\n        return (\n            <ul className=\"todo-app__list\" id=\"todo-list\">\n                { this.render_rows() }\n            </ul>\n        );\n    }\n}\n\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value:''};\n    }\n\n    handleChange = (event)=>{\n        this.setState((state)=>({value: event.target.value}));\n    }\n\n    keyPress = (event)=>{\n        if (event.keyCode === 13) { //[enter] key\n            var text = this.state.value.trim();\n            if (text !== \"\") {\n                this.props.addTodo(text);\n            }\n            this.setState((state)=>({value:\"\"}));\n        }\n    }\n\n    render() {\n        return (\n            <input type=\"text\"\n                className=\"todo-app__input\"\n                value={this.state.value} \n                onChange={this.handleChange} \n                onKeyDown={this.keyPress} \n            />\n        );\n    }\n}\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoApp from \"./containers/TodoApp\";\n\nReactDOM.render(\n    <TodoApp className=\"todo-app__root\" />,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}